#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define Ldv 0
#define Lqt 1
#define Lkp 2
#define Lfn 3
#define Lmod 4

/ {
    behaviors {
      #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO
      macro_ver: macro_ver {
        compatible = "zmk,behavior-macro";
        label = "macro_version";
        #binding-cells = <0>;
        bindings = <&kp RET>;
      };
      #endif

      hm: homerow_mods {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          quick_tap_ms = <175>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
      };
    };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &kp GRAVE     &kp N1    &kp N2    &kp N3   &kp N4     &kp N5 &tog Lkp                                                         &mo Lmod &kp N6 &kp N7 &kp N8   &kp N9   &kp N0   &kp BSLH
        &kp TAB       &kp SQT   &kp COMMA &kp DOT  &kp P      &kp Y  &kp GRAVE                                                        &trans   &kp F  &kp G  &kp C    &kp R    &kp L    &kp FSLH
        &mt LCTRL ESC &kp A     &kp O     &kp E    &kp U      &kp I  &kp TAB         &kp LALT  &kp HOME &kp PG_UP &kp RCTRL           &trans   &kp D  &kp H  &kp T    &kp N    &kp S    &kp MINUS
        &kp LSHFT     &kp SEMI  &kp Q     &kp J    &kp K      &kp X                            &kp END  &kp PG_DN                              &kp B  &kp M  &kp W    &kp V    &kp Z    &kp RSHFT
        &mo Lfn       &kp EQUAL &kp CAPS  &kp LEFT &kp RIGHT                &kp BSPC &kp LCMD  &mo Lfn  &mo Lfn   &kp ENTER &kp SPACE                 &kp UP &kp DOWN &kp LBKT &kp RBKT &mo Lfn
      >;
    };
    layer_qwerty {
      bindings = <
        &trans    &trans    &trans   &trans   &trans     &trans &trans                                                           &trans &trans &trans &trans    &trans   &trans   &trans
        &trans    &kp Q     &kp W    &kp E    &kp R      &kp T  &trans                                                           &trans &kp Y  &kp U  &kp I     &kp O    &kp P    &trans
        &trans    &kp A     &kp S    &kp D    &kp F      &kp G  &trans          &trans    &trans   &trans    &trans              &trans &kp H  &kp J  &kp K     &kp L    &kp SEMI &trans
        &trans    &kp Z     &kp X    &kp C    &kp V      &kp B                            &trans   &trans                               &kp N  &kp M  &kp COMMA &kp DOT  &kp FSLH &trans
        &trans    &trans    &trans   &trans   &trans                   &trans   &trans    &trans   &trans    &trans    &trans                  &trans &trans    &trans   &trans   &trans
      >;
    };
    keypad {
      bindings = <
        &kp EQUAL &kp N1    &kp N2   &kp N3   &kp N4     &kp N5 &trans                                                         &mo Lmod &kp N6 &kp KP_NUM &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY &kp MINUS
        &kp TAB   &kp Q     &kp W    &kp E    &kp R      &kp T  &none                                                          &none    &kp Y  &kp KP_N7  &kp KP_N8    &kp KP_N9     &kp KP_MINUS    &kp BSLH
        &kp ESC   &kp A     &kp S    &kp D    &kp F      &kp G  &none           &trans    &trans   &trans    &trans            &none    &kp H  &kp KP_N4  &kp KP_N5    &kp KP_N6     &kp KP_PLUS     &kp SQT
        &kp LSHFT &kp Z     &kp X    &kp C    &kp V      &kp B                            &trans   &trans                               &kp N  &kp KP_N1  &kp KP_N2    &kp KP_N3     &kp KP_ENTER    &kp RSHFT
        &mo Lfn   &kp GRAVE &kp CAPS &kp LEFT &kp RIGHT                &trans   &trans    &trans   &trans    &trans  &kp KP_N0                 &kp UP     &kp DOWN     &kp KP_DOT    &kp RBKT        &mo Lfn
      >;
    };
    fn {
      bindings = <
        &none  &kp F1 &kp F2 &kp F3   &kp F4   &kp F5       &trans                                          &kp C_MUTE   &kp F6   &kp F7     &kp F8     &kp F9     &kp F10    &kp C_BRI_UP
        &none  &none  &none  &kp LBRC &kp RBRC &none        &kp LS(GRAVE)                                   &kp C_VOL_UP &none    &kp HOME   &kp UP     &kp PG_UP  &kp F11    &kp C_BRI_DN
        &none  &none  &none  &kp LPAR &kp RPAR &macro_arrow &kp LS(TAB)  &trans &none  &none  &trans        &kp C_VOL_DN &none    &kp LEFT   &kp DOWN   &kp RIGHT  &kp F12    &kp C_BRI_AUTO
        &none  &none  &none  &kp LBKT &kp RBKT &macro_rwild                     &none  &none                             &kp C_PP &kp END    &none      &kp PG_DN  &none      &none
        &none  &none  &none  &none    &none                       &none  &trans &none  &none  &trans &trans                       &kp C_PREV &kp C_NEXT &none      &none      &none
      >;
    };
    mod {
      bindings = <
        &tog Lqt &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none                                                                     &trans                 &none        &none        &none        &none      &none &none
        &none    &none        &none        &none        &none        &none        &bootloader                                                               &bootloader            &none        &none        &none        &none      &none &none
        &none    &none        &none        &none        &none        &none        &none                   &none &none &bt BT_CLR &none                      &rgb_ug RGB_MEFS_CMD 5 &none        &none        &none        &none      &none &none
        &none    &none        &none        &none        &macro_ver   &none                                      &none &none                                                        &none        &none        &none        &macro_ver &none &none
        &none    &none        &none        &none        &none                                       &none &none &none &none      &bl BL_TOG &rgb_ug RGB_TOG                                     &bl BL_INC   &bl BL_DEC   &none      &none &none
      >;
    };
  };
};
